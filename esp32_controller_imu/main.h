#ifndef MAIN_H
#define MAIN_H

#define VOLTAGE_CUTOFF  7.20

// PREAMBLES
#define RETURN_NONE 0x08
#define RETURN_VA   0x0F
#define RETURN_IMU  0b1001

// COMMAND CODES
#define CMD_PULSE       0x07
#define CMD_PULSE_DELAY 0x06
#define CMD_LED         0x02
#define CMD_ENABLE      0x0F
#define CMD_DISABLE     0x01

// COMMONLY USED SERO MASKS
#define ALL_SERVOS  0x1FFFF
#define LEG_SERVOS  0b1111111100000
#define RIGHT_ARM   0b11110
#define LEFT_ARM    0b11110000000011110

// SAFETY LOCK FOR FORWARD ROLL (X-BUTTON)
// SET TO TRUE TO PREVENT MISFIRES AND ACCIDENTS
#define ULT_LOCK true

// INT VALUE TO COMPARE AGAINST TO PERFORM MOVEMENT ACTIONS USING
// LEFT AND RIGHT JOYSTICKS
#define AXIS_THRESHOLD 400

// DISABLES RELAY ACTIVATION TO PREVENT SERVO ACTUATION.  INTENDED
// FOR USAGE WITH A SERIAL MONITOR FOR DEBUGGING PURPOSES
#define SERIAL_DEBUG_MODE true

struct servoStruct {
  int min;
  int mid;
  int max;
  bool angle180; // if false, will map to 270 angle range
};

// If you're working with multiple robots, you can use this to select between
// devices and incorporate their respective calibration and controller mac
// addresses
enum DeviceID {E20A, C25A};
#define DEVICE_SELECT E20A

#if DEVICE_SELECT == E20A

  #define CTRL_MAC "98:b6:7f:0a:fa:59"

  servoStruct s_torso = {515, 1458, 2397, false};   // TORSO
  servoStruct s_ra1 =   {510, 1495, 2397, false};   // RIGHT ARM SHOULDER BASE
  servoStruct s_ra2 =   {543, 1505, 2413, false};   // RIGHT ARM SHOULDER SWING
  servoStruct s_ra3 =   {592, 1495, 2404, true};    // RIGHT ARM BICEP SWIVEL
  servoStruct s_ra4 =   {593, 1493, 2385, true};    // RIGHT ARM ELBOW
  servoStruct s_rl1 =   {592, 1512, 2405, true};    // RIGHT LEG THIGH
  servoStruct s_rl2 =   {588, 1490, 2372, true};    // RIGHT LEG FEMUR
  servoStruct s_rl3 =   {643, 1550, 2432, true};    // RIGHT LEG TIBIA
  servoStruct s_rl4 =   {587, 1493, 2405, true};    // RIGHT LEG ANKLE
  servoStruct s_la1 =   {505, 1457, 2409, false};   // LEFT ARM SHOULDER BASE
  servoStruct s_la2 =   {550, 1509, 2453, false};   // LEFT ARM SHOULDER SWING
  servoStruct s_la3 =   {622, 1530, 2480, true};    // LEFT ARM BICEP SWIVEL
  servoStruct s_la4 =   {622, 1533, 2440, true};    // LEFT ARM ELBOW
  servoStruct s_ll1 =   {597, 1500, 2410, true};    // LEFT LEG THIGH
  servoStruct s_ll2 =   {685, 1580, 2470, true};    // LEFT LEG FEMUR
  servoStruct s_ll3 =   {567, 1522, 2437, true};    // LEFT LEG TIBIA
  servoStruct s_ll4 =   {591, 1520, 2428, true};    // LEFT LEG ANKLE

#elif DEVICE_SELECT == C25A

  #define CTRL_MAC "98:b6:d5:20:65:22"

  servoStruct s_torso = {524, 1470, 2405, false};   // TORSO
  servoStruct s_ra1 =   {575, 1528, 2456, false};   // RIGHT ARM SHOULDER BASE
  servoStruct s_ra2 =   {542, 1522, 2420, false};   // RIGHT ARM SHOULDER SWING
  servoStruct s_ra3 =   {601, 1513, 2428, true};    // RIGHT ARM BICEP SWIVEL
  servoStruct s_ra4 =   {607, 1520, 2430, true};    // RIGHT ARM ELBOW
  servoStruct s_rl1 =   {653, 1558, 2451, true};    // RIGHT LEG THIGH
  servoStruct s_rl2 =   {597, 1530, 2440, true};    // RIGHT LEG FEMUR
  servoStruct s_rl3 =   {584, 1500, 2404, true};    // RIGHT LEG TIBIA
  servoStruct s_rl4 =   {560, 1486, 2389, true};    // RIGHT LEG ANKLE
  servoStruct s_la1 =   {561, 1520, 2440, false};   // LEFT ARM SHOULDER BASE
  servoStruct s_la2 =   {557, 1511, 2447, false};   // LEFT ARM SHOULDER SWING
  servoStruct s_la3 =   {602, 1514, 2413, true};    // LEFT ARM BICEP SWIVEL
  servoStruct s_la4 =   {615, 1537, 2456, true};    // LEFT ARM ELBOW
  servoStruct s_ll1 =   {555, 1488, 2398, true};    // LEFT LEG THIGH
  servoStruct s_ll2 =   {587, 1512, 2415, true};    // LEFT LEG FEMUR
  servoStruct s_ll3 =   {587, 1508, 2400, true};    // LEFT LEG TIBIA
  servoStruct s_ll4 =   {605, 1509, 2416, true};    // LEFT LEG ANKLE

#endif

// Pin mapping array for servos: 0th index = SERVO1, 17th index = SERVO18
servoStruct servoCluster[] = {
  s_torso, s_ra1, s_ra2, s_ra3, s_ra4,
  s_rl1, s_rl2, s_rl3, s_rl4,
  s_ll1, s_ll2, s_ll3, s_ll4,
  s_la1, s_la2, s_la3, s_la4,
  };

float emote5_2[] = {
15.0,15.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,
11.0,11.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,
0.0,0.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,
-15.0,-15.0,-12.7,-21.3,10.6,-12.7,1.8,25.7,-14.7,1.8,
0.0,0.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,
11.0,11.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,
15.0,15.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,
11.0,11.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,
0.0,0.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,
-15.0,-15.0,-1.8,-25.7,14.7,-1.8,12.7,21.3,-10.6,12.7,
0.0,0.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,
11.0,11.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,
15.0,15.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,
11.0,11.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,
0.0,0.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,
-15.0,-15.0,-12.7,-21.3,10.6,-12.7,1.8,25.7,-14.7,1.8,
0.0,0.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,
11.0,11.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,
15.0,15.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,
11.0,11.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,
0.0,0.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,
-15.0,-15.0,-12.7,-21.3,10.6,-12.7,1.8,25.7,-14.7,1.8,
0.0,0.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,
11.0,11.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,
15.0,15.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,
11.0,11.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,
0.0,0.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,
-15.0,-15.0,-1.8,-25.7,14.7,-1.8,12.7,21.3,-10.6,12.7,
0.0,0.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,
11.0,11.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,
15.0,15.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,
11.0,11.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,
0.0,0.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,
-15.0,-15.0,-12.7,-21.3,10.6,-12.7,1.8,25.7,-14.7,1.8,
0.0,0.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,
11.0,11.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,
15.0,15.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,
11.0,11.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,
0.0,0.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,
-15.0,-15.0,-1.8,-25.7,14.7,-1.8,12.7,21.3,-10.6,12.7,
0.0,0.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,
11.0,11.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,
15.0,15.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,
11.0,11.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,
0.0,0.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,
-15.0,-15.0,-1.8,-25.7,14.7,-1.8,12.7,21.3,-10.6,12.7,
0.0,0.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,
11.0,11.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,
};

float emote5_1[] = {
-30.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,30.0,
-26.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,26.0,
-15.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,15.0,
0.0,-12.7,-21.3,10.6,-12.7,1.8,25.7,-14.7,1.8,-0.0,
-15.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,15.0,
-26.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,26.0,
-30.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,30.0,
-26.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,26.0,
-15.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,15.0,
0.0,-1.8,-25.7,14.7,-1.8,12.7,21.3,-10.6,12.7,-0.0,
-15.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,15.0,
-26.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,26.0,
-30.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,30.0,
-26.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,26.0,
-15.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,15.0,
0.0,-12.7,-21.3,10.6,-12.7,1.8,25.7,-14.7,1.8,-0.0,
-15.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,15.0,
-26.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,26.0,
-30.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,30.0,
-26.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,26.0,
-15.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,15.0,
0.0,-12.7,-21.3,10.6,-12.7,1.8,25.7,-14.7,1.8,-0.0,
-15.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,15.0,
-26.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,26.0,
-30.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,30.0,
-26.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,26.0,
-15.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,15.0,
0.0,-1.8,-25.7,14.7,-1.8,12.7,21.3,-10.6,12.7,-0.0,
-15.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,15.0,
-26.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,26.0,
-30.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,30.0,
-26.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,26.0,
-15.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,15.0,
0.0,-12.7,-21.3,10.6,-12.7,1.8,25.7,-14.7,1.8,-0.0,
-15.0,-12.3,-26.3,15.2,-12.3,2.7,29.5,-18.1,2.7,15.0,
-26.0,-11.1,-36.2,24.2,-11.1,5.1,37.7,-25.5,5.1,26.0,
-30.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,30.0,
-26.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,26.0,
-15.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,15.0,
0.0,-1.8,-25.7,14.7,-1.8,12.7,21.3,-10.6,12.7,-0.0,
-15.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,15.0,
-26.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,26.0,
-30.0,-9.1,-46.6,33.1,-9.1,9.1,46.6,-33.1,9.1,30.0,
-26.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,26.0,
-15.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,15.0,
0.0,-1.8,-25.7,14.7,-1.8,12.7,21.3,-10.6,12.7,-0.0,
-15.0,-2.7,-29.5,18.1,-2.7,12.3,26.3,-15.2,12.3,15.0,
-26.0,-5.1,-37.7,25.5,-5.1,11.1,36.2,-24.2,11.1,26.0,
};

float emote4_1[] = {
  -45.0, -90.0, 0.0, 45.0,
};

float emote4_2[] = {
  0.0, -90.0, 0.0, -20.0,
};

float emote3[] = {
  0.0,
  70.0, -90.0, 0.0, 70.0,
  -9.5, -59.9, 15.3, -9.5, 
  9.5, 2.4, -62.2, 9.5, 
  135.0, 60.0, 0.0, 20.0
};

float sequence_emote2[] = {
0.0, -90.0, 0.0, -2.3, -47.5, 33.8, -2.3, 2.3, 47.5, -33.8, 2.3, 90.0, 0.0, 
-7.5, -95.0, -15.0, -2.3, -48.9, 34.9, -2.3, 2.3, 48.9, -34.9, 2.3, 85.0, -15.0, 
-13.0, -98.7, -26.0, -2.4, -50.3, 36.1, -2.4, 2.4, 50.3, -36.1, 2.4, 81.3, -26.0, 
-15.0, -100.0, -30.0, -2.4, -51.7, 37.2, -2.4, 2.4, 51.7, -37.2, 2.4, 80.0, -30.0, 
-13.0, -98.7, -26.0, -2.5, -53.1, 38.2, -2.5, 2.5, 53.1, -38.2, 2.5, 81.3, -26.0, 
-7.5, -95.0, -15.0, -2.5, -54.4, 39.2, -2.5, 2.5, 54.4, -39.2, 2.5, 85.0, -15.0, 
0.0, -90.0, 0.0, -2.6, -55.7, 40.2, -2.6, 2.6, 55.7, -40.2, 2.6, 90.0, 0.0, 
7.5, -85.0, 15.0, -2.7, -57.0, 41.2, -2.7, 2.7, 57.0, -41.2, 2.7, 95.0, 15.0, 
13.0, -81.3, 26.0, -2.7, -58.4, 42.1, -2.7, 2.7, 58.4, -42.1, 2.7, 98.7, 26.0, 
15.0, -80.0, 30.0, -2.8, -59.7, 43.0, -2.8, 2.8, 59.7, -43.0, 2.8, 100.0, 30.0, 
13.0, -81.3, 26.0, -2.9, -60.9, 43.9, -2.9, 2.9, 60.9, -43.9, 2.9, 98.7, 26.0, 
7.5, -85.0, 15.0, -2.9, -62.2, 44.8, -2.9, 2.9, 62.2, -44.8, 2.9, 95.0, 15.0, 
0.0, -90.0, 0.0, -3.0, -63.5, 45.6, -3.0, 3.0, 63.5, -45.6, 3.0, 90.0, 0.0, 
-7.5, -95.0, -15.0, -3.1, -64.8, 46.4, -3.1, 3.1, 64.8, -46.4, 3.1, 85.0, -15.0, 
-13.0, -98.7, -26.0, -3.2, -66.0, 47.2, -3.2, 3.2, 66.0, -47.2, 3.2, 81.3, -26.0, 
-15.0, -100.0, -30.0, -3.3, -67.3, 47.9, -3.3, 3.3, 67.3, -47.9, 3.3, 80.0, -30.0, 
-13.0, -98.7, -26.0, -3.4, -68.6, 48.6, -3.4, 3.4, 68.6, -48.6, 3.4, 81.3, -26.0, 
-7.5, -95.0, -15.0, -3.5, -69.9, 49.3, -3.5, 3.5, 69.9, -49.3, 3.5, 85.0, -15.0, 
0.0, -90.0, 0.0, -3.6, -71.2, 50.0, -3.6, 3.6, 71.2, -50.0, 3.6, 90.0, 0.0, 
7.5, -85.0, 15.0, -3.7, -72.5, 50.6, -3.7, 3.7, 72.5, -50.6, 3.7, 95.0, 15.0, 
13.0, -81.3, 26.0, -3.8, -73.8, 51.2, -3.8, 3.8, 73.8, -51.2, 3.8, 98.7, 26.0, 
15.0, -80.0, 30.0, -3.9, -75.1, 51.8, -3.9, 3.9, 75.1, -51.8, 3.9, 100.0, 30.0, 
13.0, -81.3, 26.0, -4.1, -76.5, 52.3, -4.1, 4.1, 76.5, -52.3, 4.1, 98.7, 26.0, 
7.5, -85.0, 15.0, -4.2, -77.8, 52.8, -4.2, 4.2, 77.8, -52.8, 4.2, 95.0, 15.0, 
0.0, -90.0, 0.0, -4.4, -79.2, 53.3, -4.4, 4.4, 79.2, -53.3, 4.4, 90.0, 0.0, 
-7.5, -95.0, -15.0, -4.2, -77.8, 52.8, -4.2, 4.2, 77.8, -52.8, 4.2, 85.0, -15.0, 
-13.0, -98.7, -26.0, -4.1, -76.5, 52.3, -4.1, 4.1, 76.5, -52.3, 4.1, 81.3, -26.0, 
-15.0, -100.0, -30.0, -3.9, -75.1, 51.8, -3.9, 3.9, 75.1, -51.8, 3.9, 80.0, -30.0, 
-13.0, -98.7, -26.0, -3.8, -73.8, 51.2, -3.8, 3.8, 73.8, -51.2, 3.8, 81.3, -26.0, 
-7.5, -95.0, -15.0, -3.7, -72.5, 50.6, -3.7, 3.7, 72.5, -50.6, 3.7, 85.0, -15.0, 
0.0, -90.0, 0.0, -3.6, -71.2, 50.0, -3.6, 3.6, 71.2, -50.0, 3.6, 90.0, 0.0, 
7.5, -85.0, 15.0, -3.5, -69.9, 49.3, -3.5, 3.5, 69.9, -49.3, 3.5, 95.0, 15.0, 
13.0, -81.3, 26.0, -3.4, -68.6, 48.6, -3.4, 3.4, 68.6, -48.6, 3.4, 98.7, 26.0, 
15.0, -80.0, 30.0, -3.3, -67.3, 47.9, -3.3, 3.3, 67.3, -47.9, 3.3, 100.0, 30.0, 
13.0, -81.3, 26.0, -3.2, -66.0, 47.2, -3.2, 3.2, 66.0, -47.2, 3.2, 98.7, 26.0, 
7.5, -85.0, 15.0, -3.1, -64.8, 46.4, -3.1, 3.1, 64.8, -46.4, 3.1, 95.0, 15.0, 
0.0, -90.0, 0.0, -3.0, -63.5, 45.6, -3.0, 3.0, 63.5, -45.6, 3.0, 90.0, 0.0, 
-7.5, -95.0, -15.0, -2.9, -62.2, 44.8, -2.9, 2.9, 62.2, -44.8, 2.9, 85.0, -15.0, 
-13.0, -98.7, -26.0, -2.9, -60.9, 43.9, -2.9, 2.9, 60.9, -43.9, 2.9, 81.3, -26.0, 
-15.0, -100.0, -30.0, -2.8, -59.7, 43.0, -2.8, 2.8, 59.7, -43.0, 2.8, 80.0, -30.0, 
-13.0, -98.7, -26.0, -2.7, -58.4, 42.1, -2.7, 2.7, 58.4, -42.1, 2.7, 81.3, -26.0, 
-7.5, -95.0, -15.0, -2.7, -57.0, 41.2, -2.7, 2.7, 57.0, -41.2, 2.7, 85.0, -15.0, 
0.0, -90.0, 0.0, -2.6, -55.7, 40.2, -2.6, 2.6, 55.7, -40.2, 2.6, 90.0, 0.0, 
7.5, -85.0, 15.0, -2.5, -54.4, 39.2, -2.5, 2.5, 54.4, -39.2, 2.5, 95.0, 15.0, 
13.0, -81.3, 26.0, -2.5, -53.1, 38.2, -2.5, 2.5, 53.1, -38.2, 2.5, 98.7, 26.0, 
15.0, -80.0, 30.0, -2.4, -51.7, 37.2, -2.4, 2.4, 51.7, -37.2, 2.4, 100.0, 30.0, 
13.0, -81.3, 26.0, -2.4, -50.3, 36.1, -2.4, 2.4, 50.3, -36.1, 2.4, 98.7, 26.0, 
7.5, -85.0, 15.0, -2.3, -48.9, 34.9, -2.3, 2.3, 48.9, -34.9, 2.3, 95.0, 15.0, 
};

float sequence_emote1[] = {
  -60.0, -9.1, -46.6, 33.1, -9.1, -4.6, 47.3, -33.6, -4.6, -0.0,
  -58.0, -8.2, -46.8, 33.2, -8.2, -3.7, 47.4, -33.7, -3.7, 15.5,
  -52.0, -5.7, -47.2, 33.5, -5.7, -1.1, 47.5, -33.8, -1.1, 30.0,
  -42.4, -2.3, -47.5, 33.8, -2.3, 2.3, 47.5, -33.8, 2.3, 42.4,
  -30.0, 1.1, -47.5, 33.8, 1.1, 5.7, 47.2, -33.5, 5.7, 52.0,
  -15.5, 3.7, -47.4, 33.7, 3.7, 8.2, 46.8, -33.2, 8.2, 58.0,
  0.0, 4.6, -47.3, 33.6, 4.6, 9.1, 46.6, -33.1, 9.1, 60.0,
  -15.5, 3.7, -47.4, 33.7, 3.7, 8.2, 46.8, -33.2, 8.2, 58.0,
  -30.0, 1.1, -47.5, 33.8, 1.1, 5.7, 47.2, -33.5, 5.7, 52.0,
  -42.4, -2.3, -47.5, 33.8, -2.3, 2.3, 47.5, -33.8, 2.3, 42.4,
  -52.0, -5.7, -47.2, 33.5, -5.7, -1.1, 47.5, -33.8, -1.1, 30.0,
  -58.0, -8.2, -46.8, 33.2, -8.2, -3.7, 47.4, -33.7, -3.7, 15.5,
};

float roll_1[] = {
  0.0,
  -90.0, -80.0, 0.0, 60.0,
  0.0, 0.0, 80.0, 0.0,
  0.0, 0.0, -80.0, 0.0,
  90.0, 80.0, 0.0, -60.0
};

float roll_2[] = {
  45.0,
  0.0, -80.0, 80.0, 0.0,
  0.0, 80.0, -80.0, 0.0,
  -45.0
};

float roll_3[] = {
  0.0, 0.0, 0.0, 0.0,
  0.0, 0.0, 0.0, 0.0,
};

float swipeL_1[] = {
  -30.0,
  0.0, 0.0, -90.0, 90.0,
  -9.5, -2.4, 62.2, -9.5, 
  9.5, 62.0, 4.6, 9.5, 
  90.0, 60.0, 0.0, 20.0
};

float swipeL_2[] = {60.0, 0.0, -30.0, -90.0, 45.0};

float swipeR_1[] = {
  30.0,
  -90.0, -60.0, 0.0, -20.0, 
  -9.5, -62.0, -4.6, -9.5,
  9.5, 2.4, -62.2, 9.5,
  0.0, 0.0, 90.0, -90.0
};

float swipeR_2[] = {-60.0, 0.0, 30.0, 90.0, -45.0};

float uppCutL_1[] = {
  -60.0,
  -90.0, -60.0, 0.0, -20.0,
  -9.5, -59.9, 15.3, -9.5, 
  9.5, 2.4, -62.2, 9.5, 
  90.0, 60.0, -90.0, -90.0,
};

float uppCutR_1[] = {
  60.0,
  -90.0, -60.0, 90.0, 90.0,
  -9.5, -2.4, 62.2, -9.5, 
  9.5, 59.9, -15.3, 9.5, 
  90.0, 60.0, 0.0, 20.0
};

float uppCut_2[] = {0.0, 0.0};

float punchL[] = {
  -60.0,
  -90.0, -45.0, 0.0, -20.0,
  -9.5, -62.0, -4.6, -9.5,
  9.5, 2.4, -62.2, 9.5,
  0.0, 30.0, 0.0, -90.0
};

float punchR[] = {
  60.0, 
  0.0, -30.0, 0.0, 90.0,
  -9.5, -2.4, 62.2, -9.5, 
  9.5, 62.0, 4.6, 9.5, 
  90.0, 45.0, 0.0, 20.0
};

float getupFront_1[] = {
  0.0, 0.0, -90.0, 0.0, -20.0,
  -45.0, -75.0, 75.0, -45.0,
  45.0, 75.0, -75.0, 45.0,
  0.0, 90.0, 0.0, 20.0
};

float getupFront_2[] = {
  90.0, -90.0
};

float getupFront_3[] = {
  60.0, -60.0 
};

float getupBack_1[] = {
  0.0, 0.0, 90.0, 0.0, -20.0,
  -45.0, -75.0, 75.0, -45.0,
  45.0, 75.0, -75.0, 45.0,
  0.0, -90.0, 0.0, 20.0
};

float getupBack_2[] = {
  45.0, 90.0, -45.0, -90.0
};

float idleAngles[] = {
  0.0, 
  -90.0, -60.0, 0.0, -20.0, 
  -4.0, -49.3, 31.2, -4.0, 
  4.0, 49.3, -31.2, 4.0, 
  90.0, 60.0, 0.0, 20.0
};

float crouchAngles[] = {
  0.0,
  -45.0, -30.0, 0.0, -20.0,
  -30.0, -75.0, 75.0, -30.0,
  30.0, 75.0, -75.0, 30.0,
  45.0, 30.0, 0.0, 20.0
};

float sequence_strafeL[] = {
-3.0, -45.7, 36.6, -3.0, 
3.0, 45.7, -36.6, 3.0, 
-10.5, -36.6, 28.4, -10.5, 
10.5, 45.7, -36.6, 10.5, 
-16.0, -28.4, 20.8, -16.0, 
16.0, 45.7, -36.6, 16.0, 
-18.0, -24.7, 17.3, -18.0, 
18.0, 45.7, -36.6, 18.0, 
-16.0, -28.4, 20.8, -16.0, 
16.0, 45.7, -36.6, 16.0, 
-10.5, -36.6, 28.4, -10.5, 
10.5, 45.7, -36.6, 10.5,
};

float sequence_strafeR[] = {
-3.0, -45.7, 36.6, -3.0, 
3.0, 45.7, -36.6, 3.0, 
-10.5, -45.7, 36.6, -10.5, 
10.5, 36.6, -28.4, 10.5, 
-16.0, -45.7, 36.6, -16.0, 
16.0, 28.4, -20.8, 16.0, 
-18.0, -45.7, 36.6, -18.0, 
18.0, 24.7, -17.3, 18.0, 
-16.0, -45.7, 36.6, -16.0, 
16.0, 28.4, -20.8, 16.0, 
-10.5, -45.7, 36.6, -10.5, 
10.5, 36.6, -28.4, 10.5, 
};

float sequence_initBwd[] = {
  0.0, -90.0, -2.3, -49.3, 31.2, -2.3, 2.3, 49.3, -31.2, 2.3, 90.0,
  2.6, -84.8, -9.5, -58.0, 41.1, -9.5, -3.2, 46.0, -25.3, -3.2, 95.2,
  5.0, -80.0, -16.4, -62.2, 48.1, -16.4, -6.9, 42.8, -19.8, -6.9, 100.0,
  7.1, -75.9, -19.4, -61.7, 52.2, -19.4, -8.1, 42.0, -16.1, -8.1, 104.1,
  8.7, -72.7, -16.4, -57.4, 53.4, -16.4, -6.9, 44.8, -15.2, -6.9, 107.3,
  9.7, -70.7, -9.5, -49.7, 50.6, -9.5, -3.2, 50.3, -16.1, -3.2, 109.3,
};

float sequence_walkBwd[] = {
  0.0, -90.0, -19.4, -68.7, 43.7, -19.4, -8.1, 38.7, -22.6, -8.1, 90.0,
  5.0, -80.0, -16.4, -62.2, 48.1, -16.4, -6.9, 42.8, -19.8, -6.9, 100.0,
  8.7, -72.7, -9.5, -51.9, 48.3, -9.5, -3.2, 49.4, -18.5, -3.2, 107.3,
  10.0, -70.0, -2.3, -38.8, 43.3, -2.3, 2.3, 56.6, -17.0, 2.3, 110.0,
  8.7, -72.7, 3.2, -38.3, 35.5, 3.2, 9.5, 66.3, -28.3, 9.5, 107.3,
  5.0, -80.0, 6.9, -37.6, 28.0, 6.9, 16.4, 70.4, -36.9, 16.4, 100.0,
  0.0, -90.0, 8.1, -38.7, 22.6, 8.1, 19.4, 68.7, -43.7, 19.4, 90.0,
  -5.0, -100.0, 6.9, -42.8, 19.8, 6.9, 16.4, 62.2, -48.1, 16.4, 80.0,
  -8.7, -107.3, 3.2, -49.4, 18.5, 3.2, 9.5, 51.9, -48.3, 9.5, 72.7,
  -10.0, -110.0, -2.3, -56.6, 17.0, -2.3, 2.3, 38.8, -43.3, 2.3, 70.0,
  -8.7, -107.3, -9.5, -66.3, 28.3, -9.5, -3.2, 38.3, -35.5, -3.2, 72.7,
  -5.0, -100.0, -16.4, -70.4, 36.9, -16.4, -6.9, 37.6, -28.0, -6.9, 80.0,
};

float sequence_initFwd[] = {
0.0, -90.0, -2.3, -52.7, 25.7, -2.3, 2.3, 52.7, -25.7, 2.3, 90.0,
2.6, -84.8, 3.2, -46.5, 24.4, 3.2, 9.0, 62.5, -28.4, 9.0, 95.2,
5.0, -80.0, 6.9, -40.9, 23.2, 6.9, 15.1, 69.2, -28.2, 15.1, 100.0,
7.1, -75.9, 8.1, -37.9, 23.8, 8.1, 17.5, 72.4, -26.2, 17.5, 104.1,
8.7, -72.7, 6.9, -38.2, 27.3, 6.9, 15.1, 71.7, -22.8, 15.1, 107.3,
9.7, -70.7, 3.2, -40.7, 32.8, 3.2, 9.0, 67.0, -17.9, 9.0, 109.3,
};

float sequence_walkFwd[] = {
0.0, -90.0, 8.1, -41.4, 17.5, 8.1, 17.5, 67.9, -34.4, 17.5, 90.0,
5.0, -80.0, 6.9, -40.9, 23.2, 6.9, 15.1, 69.2, -28.2, 15.1, 100.0,
8.7, -72.7, 3.2, -42.3, 30.8, 3.2, 9.0, 66.1, -20.6, 9.0, 107.3,
10.0, -70.0, -2.3, -43.3, 38.8, -2.3, 2.3, 58.3, -10.9, 2.3, 110.0,
8.7, -72.7, -9.0, -54.3, 40.7, -9.0, -3.2, 51.4, -12.7, -3.2, 107.3,
5.0, -80.0, -15.1, -62.8, 38.9, -15.1, -6.9, 45.1, -14.3, -6.9, 100.0,
0.0, -90.0, -17.5, -67.9, 34.4, -17.5, -8.1, 41.4, -17.5, -8.1, 90.0,
-5.0, -100.0, -15.1, -69.2, 28.2, -15.1, -6.9, 40.9, -23.2, -6.9, 80.0,
-8.7, -107.3, -9.0, -66.1, 20.6, -9.0, -3.2, 42.3, -30.8, -3.2, 72.7,
-10.0, -110.0, -2.3, -58.3, 10.9, -2.3, 2.3, 43.3, -38.8, 2.3, 70.0,
-8.7, -107.3, 3.2, -51.4, 12.7, 3.2, 9.0, 54.3, -40.7, 9.0, 72.7,
-5.0, -100.0, 6.9, -45.1, 14.3, 6.9, 15.1, 62.8, -38.9, 15.1, 80.0,
};

float sequence_turn[] = {
-10.0, -2.3, -47.5, 33.8, -2.3, 2.3, 47.5, -33.8, 2.3, 
-10.0, -2.5, -53.1, 38.2, -2.5, 2.5, 53.1, -38.2, 2.5, 
-10.0, -2.7, -57.0, 41.1, -2.7, 2.7, 57.0, -41.1, 2.7, 
10.0, -2.7, -58.4, 42.1, -2.7, 2.7, 58.4, -42.1, 2.7, 
10.0, -2.7, -57.0, 41.1, -2.7, 2.7, 57.0, -41.1, 2.7, 
10.0, -2.5, -53.1, 38.2, -2.5, 2.5, 53.1, -38.2, 2.5, 
};

#endif